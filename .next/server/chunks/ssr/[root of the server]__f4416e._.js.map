{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/servanpelle/Library/Mobile%20Documents/com~apple~CloudDocs/helloword/amantique_website/app/photo/galerie_page/page.tsx"],"sourcesContent":["// pages/photo/galerie_page/page.tsx\n\nimport React from 'react';\nimport Image from 'next/image';\nimport fs from 'fs';\nimport path from 'path';\nimport Link from 'next/link'; // Importation de Link\n\nconst GalleryPage = async () => {\n  const imagesDirectory = path.join(process.cwd(), 'public/img/live');\n  \n  // Lire les noms de fichiers dans le dossier\n  const filenames = fs.readdirSync(imagesDirectory);\n  \n  // Filtrer pour ne garder que les fichiers images\n  const imagePaths = filenames\n    .filter((filename) => !filename.startsWith('.') && filename.match(/\\.(jpg|jpeg|png|gif)$/))\n    .map((filename) => `/img/live/${filename}`);\n\n  return (\n    <div style={styles.container}>\n      {imagePaths.length > 0 ? (\n        imagePaths.map((imagePath, index) => (\n          <div\n            key={index}\n            style={{\n              ...styles.imageWrapper,\n              transform: `rotate(${(index * 10) % 360}deg)`, // Inclina chaque image d'un angle différent\n              left: `${Math.random() * 80}%`, // Positionne aléatoirement les images\n              top: `${Math.random() * 80}%`, \n            }}\n          >\n            <Image src={imagePath} alt={`Image ${index}`} width={200} height={200} />\n          </div>\n        ))\n      ) : (\n        <p>No images found.</p>\n      )}\n      \n      {/* Bouton de retour à l'accueil */}\n      <div style={styles.buttonWrapper}>\n        <Link href=\"/\">\n          <button style={styles.button}>Retour à l&apos;accueil</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\n// Définir un type explicite pour les styles\ntype Styles = {\n  container: React.CSSProperties;\n  imageWrapper: React.CSSProperties;\n  buttonWrapper: React.CSSProperties;\n  button: React.CSSProperties;\n};\n\n// Créer l'objet de styles en respectant ce type\nconst styles: Styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh', // L'élément prend toute la hauteur de la page\n    overflow: 'hidden',\n  },\n  imageWrapper: {\n    position: 'absolute',\n    transition: 'transform 0.5s ease', // Smooth transition pour le déplacement\n  },\n  buttonWrapper: {\n    position: 'absolute',\n    bottom: '20px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#0070f3',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n  },\n};\n\nexport default GalleryPage;\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAGpC;AACA;AACA;AACA,2QAA8B,sBAAsB;;;;;;AAEpD,MAAM,cAAc;IAClB,MAAM,kBAAkB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAEjD,4CAA4C;IAC5C,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAEjC,iDAAiD;IACjD,MAAM,aAAa,UAChB,MAAM,CAAC,CAAC,WAAa,CAAC,SAAS,UAAU,CAAC,QAAQ,SAAS,KAAK,CAAC,0BACjE,GAAG,CAAC,CAAC,WAAa,CAAC,UAAU,EAAE,UAAU;IAE5C,qBACE,8OAAC;QAAI,OAAO,OAAO,SAAS;;YACzB,WAAW,MAAM,GAAG,IACnB,WAAW,GAAG,CAAC,CAAC,WAAW,sBACzB,8OAAC;oBAEC,OAAO;wBACL,GAAG,OAAO,YAAY;wBACtB,WAAW,CAAC,OAAO,EAAE,AAAC,QAAQ,KAAM,IAAI,IAAI,CAAC;wBAC7C,MAAM,GAAG,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC;wBAC9B,KAAK,GAAG,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC;oBAC/B;8BAEA,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAAW,KAAK,CAAC,MAAM,EAAE,OAAO;wBAAE,OAAO;wBAAK,QAAQ;;;;;;mBAR7D;;;;0CAYT,8OAAC;0BAAE;;;;;;0BAIL,8OAAC;gBAAI,OAAO,OAAO,aAAa;0BAC9B,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;8BACT,cAAA,8OAAC;wBAAO,OAAO,OAAO,MAAM;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAKxC;AAUA,gDAAgD;AAChD,MAAM,SAAiB;IACrB,WAAW;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IACA,cAAc;QACZ,UAAU;QACV,YAAY;IACd;IACA,eAAe;QACb,UAAU;QACV,QAAQ;QACR,MAAM;QACN,WAAW;IACb;IACA,QAAQ;QACN,SAAS;QACT,UAAU;QACV,iBAAiB;QACjB,OAAO;QACP,QAAQ;QACR,cAAc;QACd,QAAQ;QACR,WAAW;IACb;AACF;uCAEe"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}