{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/servanpelle/Library/Mobile%20Documents/com~apple~CloudDocs/helloword/amantique_website/app/photo/galerie_page/getImages.ts"],"sourcesContent":["// app/photo/galerie_page/getImages.ts\nimport fs from 'fs';\nimport path from 'path';\n\n// Fonction pour récupérer les images côté serveur\nexport function getImages() {\n  const imagesDirectory = path.join(process.cwd(), 'public/img/poster');\n  \n  // Lire les fichiers du répertoire\n  const filenames = fs.readdirSync(imagesDirectory);\n  \n  // Filtrer les fichiers images\n  const imagePaths = filenames\n    .filter((filename: string) => !filename.startsWith('.') && filename.match(/\\.(jpg|jpeg|png|gif)$/))\n    .map((filename: string) => `/img/poster/${filename}`);\n  \n  return imagePaths;\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;;AAEtC;AAIoC;;;AAD7B,SAAS;IACd,MAAM,kBAAkB,0KAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gKAAA,CAAA,UAAO,CAAC,GAAG,IAAI;IAEjD,kCAAkC;IAClC,MAAM,YAAY,GAAG,WAAW,CAAC;IAEjC,8BAA8B;IAC9B,MAAM,aAAa,UAChB,MAAM,CAAC,CAAC,WAAqB,CAAC,SAAS,UAAU,CAAC,QAAQ,SAAS,KAAK,CAAC,0BACzE,GAAG,CAAC,CAAC,WAAqB,CAAC,YAAY,EAAE,UAAU;IAEtD,OAAO;AACT"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/servanpelle/Library/Mobile%20Documents/com~apple~CloudDocs/helloword/amantique_website/app/photo/galerie_page/page.tsx"],"sourcesContent":["// app/photo/galerie_page/page.tsx\n\n'use client';\n\nimport React, { useState } from 'react';\nimport Image from 'next/image';\nimport { getImages } from './getImages';  // Importation de la fonction côté serveur\n\ntype GalleryPageProps = {\n  imagePaths: string[];\n};\n\nconst GalleryPage = ({ imagePaths }: GalleryPageProps) => {\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  const openImagePopup = (imagePath: string) => {\n    setSelectedImage(imagePath);\n  };\n\n  const closeImagePopup = () => {\n    setSelectedImage(null);\n  };\n\n  return (\n    <div style={styles.container}>\n      {imagePaths.length > 0 ? (\n        imagePaths.map((imagePath, index) => (\n          <div\n            key={index}\n            style={{\n              ...styles.imageWrapper,\n              transform: `rotate(${(index * 10) % 360}deg)`,\n              left: `${Math.random() * 80}%`,\n              top: `${Math.random() * 80}%`,\n            }}\n            onClick={() => openImagePopup(imagePath)}\n          >\n            <Image src={imagePath} alt={`Image ${index}`} width={200} height={200} />\n          </div>\n        ))\n      ) : (\n        <p>No images found.</p>\n      )}\n\n      {/* Popup for displaying the selected image */}\n      {selectedImage && (\n        <div style={styles.popupOverlay} onClick={closeImagePopup}>\n          <div style={styles.popupContent} onClick={(e) => e.stopPropagation()}>\n            <Image src={selectedImage} alt=\"Selected\" width={800} height={800} />\n            <button onClick={closeImagePopup} style={styles.closeButton}>X</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Server-side function to fetch images\nexport async function getStaticProps() {\n  const imagePaths = getImages();  // Utilisation de la fonction côté serveur\n\n  return {\n    props: {\n      imagePaths,\n    },\n  };\n}\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n  },\n  imageWrapper: {\n    position: 'absolute',\n    transition: 'transform 0.5s ease',\n    cursor: 'pointer',\n  },\n  popupOverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  popupContent: {\n    position: 'relative',\n    maxWidth: '90%',\n    maxHeight: '90%',\n    backgroundColor: '#fff',\n    padding: '10px',\n    borderRadius: '8px',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: '10px',\n    right: '10px',\n    background: 'transparent',\n    border: 'none',\n    color: '#fff',\n    fontSize: '24px',\n    cursor: 'pointer',\n  },\n};\n\nexport default GalleryPage;\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;;AAIlC;AACA;AACA,oPAA0C,0CAA0C;;;AAJpF;;;;AAUA,MAAM,cAAc,CAAC,EAAE,UAAU,EAAoB;;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElE,MAAM,iBAAiB,CAAC;QACtB,iBAAiB;IACnB;IAEA,MAAM,kBAAkB;QACtB,iBAAiB;IACnB;IAEA,qBACE,6LAAC;QAAI,OAAO,OAAO,SAAS;;YACzB,WAAW,MAAM,GAAG,IACnB,WAAW,GAAG,CAAC,CAAC,WAAW,sBACzB,6LAAC;oBAEC,OAAO;wBACL,GAAG,OAAO,YAAY;wBACtB,WAAW,CAAC,OAAO,EAAE,AAAC,QAAQ,KAAM,IAAI,IAAI,CAAC;wBAC7C,MAAM,GAAG,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC;wBAC9B,KAAK,GAAG,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC;oBAC/B;oBACA,SAAS,IAAM,eAAe;8BAE9B,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAK;wBAAW,KAAK,CAAC,MAAM,EAAE,OAAO;wBAAE,OAAO;wBAAK,QAAQ;;;;;;mBAT7D;;;;0CAaT,6LAAC;0BAAE;;;;;;YAIJ,+BACC,6LAAC;gBAAI,OAAO,OAAO,YAAY;gBAAE,SAAS;0BACxC,cAAA,6LAAC;oBAAI,OAAO,OAAO,YAAY;oBAAE,SAAS,CAAC,IAAM,EAAE,eAAe;;sCAChE,6LAAC,gIAAA,CAAA,UAAK;4BAAC,KAAK;4BAAe,KAAI;4BAAW,OAAO;4BAAK,QAAQ;;;;;;sCAC9D,6LAAC;4BAAO,SAAS;4BAAiB,OAAO,OAAO,WAAW;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAMzE;GA3CM;KAAA;AA8CC,eAAe;IACpB,MAAM,aAAa,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,KAAM,0CAA0C;IAE3E,OAAO;QACL,OAAO;YACL;QACF;IACF;AACF;AAEA,MAAM,SAAiD;IACrD,WAAW;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IACA,cAAc;QACZ,UAAU;QACV,YAAY;QACZ,QAAQ;IACV;IACA,cAAc;QACZ,UAAU;QACV,KAAK;QACL,MAAM;QACN,OAAO;QACP,QAAQ;QACR,iBAAiB;QACjB,SAAS;QACT,gBAAgB;QAChB,YAAY;QACZ,QAAQ;IACV;IACA,cAAc;QACZ,UAAU;QACV,UAAU;QACV,WAAW;QACX,iBAAiB;QACjB,SAAS;QACT,cAAc;IAChB;IACA,aAAa;QACX,UAAU;QACV,KAAK;QACL,OAAO;QACP,YAAY;QACZ,QAAQ;QACR,OAAO;QACP,UAAU;QACV,QAAQ;IACV;AACF;uCAEe"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}